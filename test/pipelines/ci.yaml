jobs:
###
# build-terraform-pod-image
###
- name: build-terraform-pod-image
  serial: true
  plan:
  - get: once-a-day
    trigger: true
  
  - get: git
    trigger: true

  - task: build-image
    
    on_failure:
      put: send-an-email
      params:
        subject: email/subject-failed
        body: email/body-failed
    
    file: git/test/tasks/build-image.yaml
    params:
      git_src: git
      service_account_json: ((regression-project.service_account_json))
      project_id: ((regression-project.project_id))
      repo: ((github_repo))
      make: terraform-pod-image

###
# build-tfjson-image
###
- name: build-tfjson-image
  serial: true
  plan:
  - get: once-a-day
    trigger: true
  
  - get: git
    trigger: true

  - task: build-image
    
    on_failure:
      put: send-an-email
      params:
        subject: email/subject-failed
        body: email/body-failed

    file: git/test/tasks/build-image.yaml
    params:
      git_src: git
      service_account_json: ((regression-project.service_account_json))
      project_id: ((regression-project.project_id))
      repo: ((github_repo))
      make: tfjson-service-image


###
# build-operator
###
- name: build-operator
  serial: true
  plan:
  - get: once-a-day
    trigger: true
  
  - get: git
    passed: ["build-tfjson-image"]
    trigger: true

  - task: build-image
    
    on_failure:
      put: send-an-email
      params:
        subject: email/subject-failed
        body: email/body-failed

    file: git/test/tasks/build-image.yaml
    params:
      git_src: git
      service_account_json: ((regression-project.service_account_json))
      project_id: ((regression-project.project_id))
      repo: ((github_repo))
      make: image
          

###
# test-build
###
- name: test-build
  serial: true
  plan:
  - get: git
    passed: ["build-terraform-pod-image", "build-operator"]
    trigger: true
  
  - task: test-build
    
    on_failure:
      put: send-an-email
      params:
        subject: email/subject-failed
        body: email/body-failed

    file: git/test/tasks/test-build.yaml
    params:
      git_src: git
      kubeconfig: ((common.kubeconfig))
      namespace: terraform-operator-ci
      service_account_json: ((regression-project.service_account_json))
      project_id: ((regression-project.project_id))


###
# tag-latest
###
- name: tag-latest
  serial: true
  plan:
  - get: git
    passed: ["test-build"]
    trigger: true
  
  - task: tag-latest
    params:
      service_account_json: ((regression-project.service_account_json))
      project_id: ((regression-project.project_id))

    on_failure:
      put: send-an-email
      params:
        subject: email/subject-failed
        body: email/body-failed

    config:
      platform: linux
      inputs:
      - name: git
      - name: kubeconfig
      outputs:
      - name: email
      image_resource:
        type: docker-image
        source:
          repository: google/cloud-sdk
          tag: alpine
      platform: linux
      inputs:
      - name: git
      run:
        path: bash
        args:
        - -exc
        - |
          # Configure gcloud
          SA_JSON=${PWD}/service_account.json
          cat > ${SA_JSON} <<EOF
          $service_account_json
          EOF
          apk add --update --no-progress make
          gcloud auth activate-service-account --key-file=${SA_JSON}
          gcloud config set project $project_id

          BASE_DIR=${PWD}

          cd git

          # Setup email
          EMAIL=${BASE_DIR}/email
          echo "terraform-operator/tag-latest: Failed to tag build" > ${EMAIL}/subject-failed
          git --no-pager show > ${EMAIL}/body-failed

          TAG=$(make tag)

          for image in terraform-pod tfjson-service terraform-operator; do
            gcloud -q container images add-tag gcr.io/cloud-solutions-group/${image}:${TAG} gcr.io/cloud-solutions-group/${image}:latest
          done


###
# build-terraform-pod-image-pr
###
- name: build-terraform-pod-image-pr
  serial: true
  plan:
  - get: once-a-day
    trigger: true
  
  - get: git-pr
    trigger: true
    version: every
  
  - put: git-pr
    params:
      path: git-pr
      status: pending

  - task: build-image
    
    on_failure:
      put: git-pr
      params:
        path: git-pr
        status: failure
    
    file: git-pr/test/tasks/build-image.yaml
    params:
      git_src: git-pr
      service_account_json: ((pr-project.service_account_json))
      project_id: ((pr-project.project_id))
      repo: ((github_repo))
      make: terraform-pod-image

###
# build-tfjson-image-pr
###
- name: build-tfjson-image-pr
  serial: true
  plan:
  - get: once-a-day
    trigger: true
  
  - get: git-pr
    trigger: true
    version: every
  
  - put: git-pr
    params:
      path: git-pr
      status: pending

  - task: build-image
    
    on_failure:
      put: git-pr
      params:
        path: git-pr
        status: failure

    file: git-pr/test/tasks/build-image.yaml
    params:
      git_src: git-pr
      service_account_json: ((pr-project.service_account_json))
      project_id: ((pr-project.project_id))
      repo: ((github_repo))
      make: tfjson-service-image


###
# build-operator-pr
###
- name: build-operator-pr
  serial: true
  plan:
  - get: once-a-day
    trigger: true
    version: every
  
  - get: git-pr
    passed: ["build-tfjson-image-pr"]
    trigger: true
  
  - put: git-pr
    params:
      path: git-pr
      status: pending

  - task: build-image
    
    on_failure:
      put: git-pr
      params:
        path: git-pr
        status: failure

    file: git-pr/test/tasks/build-image.yaml
    params:
      git_src: git-pr
      service_account_json: ((pr-project.service_account_json))
      project_id: ((pr-project.project_id))
      repo: ((github_repo))
      make: image
          

###
# test-build-pr
###
- name: test-build-pr
  serial: true
  plan:
  - get: git-pr
    passed: ["build-terraform-pod-image-pr", "build-operator-pr"]
    trigger: true
    version: every
  
  - put: git-pr
    params:
      path: git-pr
      status: pending
  
  - task: test-build
    
    on_failure:
      put: git-pr
      params:
        path: git-pr
        status: failure

    file: git-pr/test/tasks/test-build.yaml
    params:
      git_src: git-pr
      kubeconfig: ((common.kubeconfig))
      namespace: terraform-operator-ci
      service_account_json: ((pr-project.service_account_json))
      project_id: ((pr-project.project_id))


###
# Updates PR with Passed state if all jobs pass
###
- name: update-pr-passed
  plan:
  - get: git-pr
    passed:
    - build-terraform-pod-image-pr
    - build-tfjson-image-pr
    - build-operator-pr
    - test-build-pr
    trigger: true
    version: every

  - put: git-pr
    params:
      path: git-pr
      status: success


groups:
- name: regression
  jobs: 
  - build-terraform-pod-image
  - build-tfjson-image
  - build-operator
  - test-build
  - tag-latest
- name: pull-requests
  jobs:
  - build-terraform-pod-image-pr
  - build-tfjson-image-pr
  - build-operator-pr
  - test-build-pr
  - update-pr-passed

###
# Resource types
###
resource_types:
- name: git
  type: docker-image
  source:
    repository: concourse/git-resource

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

- name: time
  type: docker-image
  source:
    repository: concourse/time-resource

- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource


###
# Resources
###
resources:
- name: git
  type: git
  source:
    uri: {{uri}}
    branch: {{branch}}

- name: git-pr
  type: pull-request
  source:
    access_token: ((common.github_access_token))
    repo:         ((github_owner))/((github_repo))
    base:         ((branch))
    label:        ok-to-test

- name: once-a-day
  type: time
  source:
    interval: 1440m

- name: send-an-email
  type: email
  source:
    smtp:
      host: ((common.smtp_host))
      port: ((common.smtp_port))
      username: ((common.smtp_username))
      password: ((common.smtp_password))
    from: concourse-tf@gcp.solutions
    to: [ {{maintainer_email}} ]